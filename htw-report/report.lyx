#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Developing a CoffeeScript QUnit module for Play 2"
\pdf_author "Michael Schleichardt"
\pdf_keywords "independent coursework, play framework, Scala, SBT, QUnit, CoffeeScript, testing"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Developing a CoffeeScript QUnit module for Play Framework 2.0.4
\end_layout

\begin_layout Author
Michael Schleichardt
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Terms
\end_layout

\begin_layout Standard
The Play Framework is a Scala Web Framework with a Java and a Scala API.
 CoffeeScript is a language that compiles into JavaScript but has a nicer
 syntax and helps you to not get caught in many JavaScripts traps.
 QUnit is a JavaScript unit test suite.
 An example of a QUnit screen is in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Screenshot-qunit-browser"

\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/screenshot-dummy-qunit-test-in-browser.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Screenshot-qunit-browser"

\end_inset

Screenshot of a QUnit testrunner in a browser window
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Goal of the module
\end_layout

\begin_layout Standard
With the module developers of web applications should be enabled to put
 QUnit tests written in CoffeeScript in the test folder and run them in
 the console 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

play test
\end_layout

\end_inset

 or in the browser with http://localhost:9000/@qunit.
\end_layout

\begin_layout Standard
The module should be easy to install and to configure.
\end_layout

\begin_layout Subsection
Similar modules
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
todo: tickets durchgehen wegen features
\end_layout

\end_inset


\end_layout

\end_body
\end_document
